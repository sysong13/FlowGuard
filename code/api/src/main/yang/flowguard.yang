module flowguard {
    yang-version 1;
    namespace "urn:opendaylight:params:xml:ns:yang:flowguard";
    prefix "flowguard";
    description "YANG version of the FIREWALL-MIB.";

    revision "2017-05-05" {
        description "Initial revision of flowguard model";
    }

    grouping fwrule {
        leaf ruleId {
           type uint16;
           config true;
           mandatory true;
           description "Name of FW rule";
        }
        leaf node {
           type string;
        }
        leaf inPort {
           type string;
        }

        leaf sourceIpAddress {
          type string;
          config true;
          mandatory false;
          description
            "The IP address source";
        }

        leaf destinationIpAddress {
          type string;
          config true;
          mandatory false;
          description
            "The IP address destination";
        }

        leaf sourcePort {
            type string;
            config true;
            mandatory false;
            description
              "The source port";
        }

        leaf destinationPort {
            type string;
            config true;
            mandatory false;
            description
              "The destination port";
        }

        leaf action {
            type enumeration {
              enum "block" {
                value 1;
                description
                    "Block = 1";
              }
              enum "allow" {
                value 2;
                description
                  "Allow = 2";
              }
            }
            config true;
            mandatory true;
          }
  }

    grouping rule {

    	leaf name {
    		type string;
    		config true;
    		mandatory false;
    		description "Name of FW rule";
    	}
    	leaf node {
        	type string;
        }
    	leaf destinationIpAddress {
            type string;
            config true;
            mandatory false;
            description
              "The IP address destination";
          }


          leaf destinationPort {
              type uint16;
              config true;
              mandatory false;
              description
                "The destination port";
          }

    }
    
    grouping conflict-info {
	     leaf priority {
	     	type uint16;
	     	config true;
	     }
	     leaf id {
	     	type uint32;
	     	config true;
	     }
	     leaf vlan-id {
	     	type uint32;
	     	config true;
	     }
	     leaf in-port {
	     	type string;
	     	config true;
	     }
	     leaf dl-src {
	     	type string;
	     	config true;
	     }
	     leaf dl-dst {
	     	type string;
	     	config true;
	     }
	     leaf nw-src {
	     	type string;
	     	config true;
	     }
	     leaf nw-dst {
	     	type string;
	     	config true;
	     }
	     leaf l4-src {
	     	type string;
	     	config true;
	     }
	     leaf l4-dst {
	     	type string;
	     	config true;
	     }
	     leaf action {
	     	type enumeration {
              enum "DROP" {
                value 1;
                description
                    "drop = 1";
              }
              enum "FORWARD" {
                value 2;
                description
                  "forward = 2";
              }
            }
            config true; 
	     }
	     leaf protocol {
	     	type enumeration {
              enum "TCP" {
                value 1;
              }
              enum "UDP" {
                value 2;
              }
              enum "ANY" {
                value 3;
              }
              
            }
            config true; 
	     }
	     leaf gen-count {
	     	type uint16;
	     	config true;
	     }
	     leaf sh-count {
	     	type uint16;
	     	config true;
	     }
	     leaf red-count {
	     	type uint16;
	     	config true;
	     }
	     leaf cor-count {
	     	type uint16;
	     	config true;
	     }
	     leaf over-count {
	     	type uint16;
	     	config true;
	     }
	     leaf conflict-type {
	     	type string;
	     	config true;
	     }
	     leaf conflict-group-number {
	     	type uint16;
	     	config true;
	     }
    }
    container rule-registry {
    	list rule-registry-entry {
    		key "name";
    		uses flowguard:rule;
    		leaf greeting {
    			type string;
    		}
    	}
    }
    container fwrule-registry {
        list fwrule-registry-entry {
            key "ruleId";
            uses flowguard:fwrule;
        }
    }
    container conflict-info-registry {
    	list conflict-group-entry {
    		key "id";
    		uses flowguard:conflict-info;
    	}
    }
    container controls {
        leaf action {
            type enumeration {
              enum "Enable" {
                value 1;
              }
              enum "Disable" {
                value 2;
                description
                  "TCP protocol.";
              }
            }
            config true;
            mandatory false;
          }
        leaf greeting {
            type string;
        }
    }
	container flowguard-status {
		leaf flowguard-status {
			type uint16;
		}
	}
    rpc add-rule {
    	input {
    		uses flowguard:rule;
    	}
    	output {
    		leaf greeting {
    			type string;
    		}
    	}
    }

    rpc flowguard-control {
        input {
            leaf action {
                type enumeration {
                  enum "Enable" {
                    value 1;
                  }
                  enum "Disable" {
                    value 2;
                  }
                }
                config true;
                mandatory false;
              }
        }
        output {
            leaf greeting {
                type string;
            }
        }
    }

    rpc add-static-fwrule {
        input {
            leaf filePath {
                type string;
              }
        }
        output {
            leaf greeting {
                type string;
            }
        }
    }

    rpc add-dynamic-fwrule {
        input {
            uses flowguard:fwrule;
        }
        output {
            leaf greeting {
                type string;
            }
        }
    }
    
    rpc get-conflicts {
    	input {
    		leaf conflict-type {
    			type enumeration {
                  enum "all" {
                    value 1;
                  }
                  enum "GENERALIZATION" {
                    value 2;
                  }
                  enum "SHADOWING" {
                    value 3;
                  }
                  enum "REDUNDANCY" {
                    value 4;
                  }
                  enum "CORRELATION" {
                    value 5;
                  }
                  enum "OVERLAP" {
                    value 6;
                  }
                }
                config true;
                mandatory true;
    		}
    	}
    	output {
    		list conflict-group-list {
    			key "id";
    			uses flowguard:conflict-info;
    		}
    	}
    }

}

